---
- name: Install fastd
  become: yes
  apt:
    update_cache: yes
    name: fastd
    state: present

- name: Create fastd directory
  become: yes
  file:
    path: '/etc/fastd'
    state: directory
    mode: 'u=rwx,g=rx,o=rx'

- name: Check that there is no fastd key
  become: yes
  stat:
    path: /etc/fastd/secret_key.txt
  register: stat_result

- name: Generate fastd secret key
  shell: 'fastd --generate-key --machine-readable'
  register: registered_fastd_secret_gen
  when: fastd_secret_key == '' and stat_result.stat.exists == False
  check_mode: no

- name: Read secret key
  become: yes
  shell: 'cat /etc/fastd/secret_key.txt'
  register: registered_fastd_secret_read
  check_mode: no
  when: fastd_secret_key == '' and stat_result.stat.exists == True

- name: Set fastd secret key
  set_fact:
    fastd_secret_key: "{{ fastd_secret | trim }}"
  when: fastd_secret_key == ''
  vars:
    fastd_secret: "{{ (registered_fastd_secret_gen.stdout is defined) | ternary(registered_fastd_secret_gen.stdout, registered_fastd_secret_read.stdout) }}"

- name: Put secret key to host
  become: yes
  template:
    src: 'templates/secret_key.j2'
    dest: '/etc/fastd/secret_key.txt'
    owner: 'root'
    group: 'root'
    mode: 'u=rw,g=,o='

- name: "Create fastd {{item.name}} directory"
  become: yes
  file:
    path: '/etc/fastd/{{item.name}}'
    state: directory
    mode: 'u=rwx,g=rx,o=rx'
  loop: "{{community_segments}}"

- name: "Create {{item.name}} config"
  become: yes
  template:
    src: 'templates/fastd.j2'
    dest: "/etc/fastd/{{item.name}}/fastd.conf"
    owner: 'root'
    group: 'root'
    mode: 'u=rw,g=,o='
  vars:
    community_segment: "{{ item.name }}"
    peers: "{{ item.peers }}"
  loop: "{{community_segments}}"

- name: "Enable and start fastd {{item.name}}"
  become: yes
  systemd:
    name: "fastd@{{item.name}}"
    state: started
    enabled: yes
  loop: "{{community_segments}}"
