---
- name: Install deps of pri-source
  become: yes
  apt:
    update_cache: yes
    pkg:
      - bison
      - flex
      - libssl-dev
    state: present

- name: Get current Kernel-Version
  command: uname -r
  register: ansible_kernel

#TODO should only run on rasbian
- name: download pri-source for the pi
  become: yes
  get_url:
    url: https://raw.githubusercontent.com/notro/rpi-source/master/rpi-source
    dest: /usr/local/bin/rpi-source
    mode: '0555'
  when: (ansible_distribution | lower) == 'debian'

#TODO should only run on rasbian
- name: update rpi source
  become: yes
  command: /usr/local/bin/rpi-source -q --tag-update
  when: (ansible_distribution | lower) == 'debian'

#TODO should only run on rasbian
- name: run rpi source
  become: yes
  command: /usr/local/bin/rpi-source
  register: rpi_source
  failed_when: rpi_source.rc != 0 and rpi_source.rc != 1
  when: (ansible_distribution | lower) == 'debian'

- name: Install dkms and kernel-headers for batman-adv
  become: yes
  apt:
    update_cache: yes
    pkg:
      - dkms
      - linux-kernel-headers
      - ifupdown
    state: present

- name: Download and unzip batman
  become: yes
  unarchive:
    src: "{{ batman_download_url }}"
    dest: /usr/src/
#    https://downloads.open-mesh.org/batman/stable/sources/batman-adv/batman-adv-2020.2.tar.gz.sha1
    remote_src: yes

#TODO: TO-FIX this shold not be done like this
- name: Remove missing link in Makefile
  become: yes
  shell: sed -i '/+= selinux/s/^/# /' /usr/src/linux-headers-*/scripts/Makefile

- name: Build batman
  become: yes
  make:
    target: scripts
    chdir: /usr/src/linux-headers-{{ansible_kernel}}
  ignore_errors: yes

- name: Write dkms config
  become: yes
  template:
    src: dkms.j2
    dest: /usr/src/batman-adv-{{batman_version}}/dkms.conf

- name: dkms add
  become: yes
  command: dkms add -m batman-adv -v {{batman_version}}
  register: ret
  failed_when: ret.rc != 0 and ret.rc != 3
  changed_when: ret.rc == 0

- name: dkms build
  become: yes
  command: dkms build -m batman-adv -v {{batman_version}}

- name: dkms install
  become: yes
  command: dkms install -m batman-adv -v {{batman_version}}

- name: add module load config
  become: yes
  template:
    src: batman-adv.module.j2
    dest: /etc/modules-load.d/batman-adv.module.conf

- name: make sure modules can be found
  become: yes
  command: depmod -a
  changed_when: false

- name: load dummy module
  become: yes
  modprobe:
    name: dummy
    state: present

- name: load batman module
  become: yes
  modprobe:
    name: batman_adv
    state: present

- name: Install build deps of batctl
  become: yes
  apt:
    update_cache: yes
    pkg:
      - libnl-genl-3-dev
    state: present

- name: purge batctl package since we build the matching one
  become: yes
  apt:
    update_cache: yes
    pkg:
      - batctl
    state: absent

- name: Download and unzip batctl
  become: yes
  unarchive:
    src: "{{ batctl_download_url }}"
    dest: /usr/src/
# https://downloads.open-mesh.org/batman/stable/sources/batctl/batctl-2020.2.tar.gz.sha1
    remote_src: yes

- name: Build batctl
  become: yes
  make:
    chdir: /usr/src/batctl-{{ batman_version }}

- name: copy batctl to get found
  become: yes
  copy:
    src: /usr/src/batctl-{{ batman_version }}/batctl
    dest: /usr/sbin/batctl
    owner: root
    group: root
    mode: '0755'
    remote_src: yes

- name: set batman to {{batman_protocol_mode}}
  become: yes
  command: batctl ra {{batman_protocol_mode}}

- name: Install bridge-utils
  become: yes
  apt:
    name: bridge-utils
    state: present

- name: "add module load config for br-{{item}}"
  become: yes
  template:
    src: br-community-segment.j2
    dest: "/etc/network/interfaces.d/br-{{item[0]}}"
  vars:
    community_segment: "{{item[0]}}"
    vlan_interface_name: "vlan{{ item[1] }}"
    additional_interfaces: "{{ [vlan_interface_name] | union(additional_bridge_interfaces) }}"
  loop: "{{community_segments | zip(ff_vlan_ids) | list() }}"
  tags:
    - vlan
    - vlans

- name: "add ff vlan"
  become: yes
  template:
    src: vlan.j2
    dest: "/etc/network/interfaces.d/vlan{{item[1]}}"
  vars:
    community_segment: "{{item[0]}}"
    vlan_id: "{{item[1]}}"
  loop: "{{community_segments | zip(ff_vlan_ids) | list() }}"
  tags:
    - vlan
    - vlans

- name: "add mesh vlan"
  become: yes
  template:
    src: vlan-mesh.j2
    dest: "/etc/network/interfaces.d/vlan{{item[1]}}"
  vars:
    community_segment: "{{item[0]}}"
    vlan_id: "{{item[1]}}"
  loop: "{{community_segments | zip(mesh_vlan_ids) | list() }}"
  tags:
    - vlan
    - vlans

- name: Cronjob checking if bridge-interface is up and take it up otherwise
  become: yes
  cron:
    name: "ReUp stuck bridge br-{{ item }}"
    minute: "*/5"
    hour: "*"
    job: "ip a | grep -Eq ': br-{{ item }}:.*state UP' || ifup br-{{ item }}"
  loop: "{{community_segments}}"
  tags:
    - brcronjob
